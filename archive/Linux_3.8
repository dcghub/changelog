#pragma section-numbers on
#pragma keywords Linux, kernel, operating system, changes, changelog, file system, Linus Torvalds, open source, device drivers
#pragma description Summary of the changes and new features merged in the Linux kernel during the 3.8 development cycle

Linux 3.8 was [[https://lkml.org/lkml/2013/2/18/476|released]] on Mon, 18 Feb 2013.

This Linux release includes support in Ext4 for embedding very small files in the inode, which greatly improves the performance for these files and saves some disk space. There is also a new Btrfs feature that allows to replace quickly a disk, a new filesystem F2FS optimized for SSDs, support of filesystem mounts, UTS, IPC, PIDs, and network stack namespaces for unprivileged users, accounting of kernel memory in the memory resource controller, journal checksums in XFS, an improved NUMA policy redesign and, of course, the removal of support for 386 processors. Many small features and new drivers and fixes are also available.


<<TableOfContents>>
= Prominent features in Linux 3.8 =
== Ext4 embeds very small files in the inode ==

Every file in Ext4 has a corresponding [[https://en.wikipedia.org/wiki/Inode|inode]] which stores various information -size, date creation, owner, etc- about the file (users can see that information with the [[http://linux.die.net/man/1/stat|stat(1)]] command). But the inode doesn't store the actual data, it just holds information about where the data it is placed.

The size used by each inode is predetermined at [[http://linux.die.net/man/8/mkfs.ext4|mkfs.ext4(8)]] time, and defaults to 256 bytes. But the space isn't always used entirely (despite small extended attributes making use of it), and there millions of inodes in a typical file system, so some space is wasted. At the same time, at least one data block is always allocated for file data (typically, 4KB), even if the file only uses a few bytes. And there is a extra seek involved for reading these few bytes, because the data blocks aren't allocated contiguously to the inodes.

Ext4 has added support for storing very small files in the unused inode space. With this feature the unused inode space gets some use, a data block isn't allocated for the file, and reading these small files is faster, because once the inode has been read, the data is already available without extra disk seeks. Some [[https://lwn.net/Articles/468678/|simple tests]] shows that with a linux-3.0 vanilla source, the new system can save more than 1% disk space. For a sample /usr directory, it saved more than 3% of space. Performance for small files is [[https://lwn.net/Articles/516645/|also improved]]. The files that can be inlined can be tweaked indirectly by increasing the inode size (-I [[http://linux.die.net/man/8/mkfs.ext4|mkfs.ext4(8)]] option) - the bigger the inode, the bigger the files that can be inlined (but if the workload doesn't make extensive use of small files, the space will be wasted).

Recommended LWN article: [[https://lwn.net/Articles/469805/|Improving ext4: bigalloc, inline data, and metadata checksums]]

Code: [[https://git.kernel.org/linus/67cf5b09a46f72e048501b84996f2f77bc42e947|(commit 1]], [[https://git.kernel.org/linus/46c7f254543dedcf134ad05091ed2b935a9a597d|2]], [[https://git.kernel.org/linus/f19d5870cbf72d4cb2a8e1f749dff97af99b071e|3]], [[https://git.kernel.org/linus/3fdcfb668fd78ec92d9bc2daddf1d41e2a8a30bb|4]], [[https://git.kernel.org/linus/9c3569b50f12e47cc5e907b5e37e4a45c0c10b43|5]], [[https://git.kernel.org/linus/978fef914a2e6b8ad5672d0a39f9201b7aa7c396|6]], [[https://git.kernel.org/linus/7335cd3b41b1e704608ca46159641ca9cb598121|7]], [[https://git.kernel.org/linus/f08225d176a5736363beea653b9b3fb9400c1255|8)]]

== Btrfs fast device replacement ==

As a filesystem that expands to multiple devices, Btrfs can remove a disk easily, just in case you want to shrink your storage pool, or just because the device is failing and you want to replace it:

    btrfs device add new_disk

    btrfs device delete old_disk

But the process is not as fast as it could be. Btrfs has added a explicit device replacement operation which is much faster:

    btrfs replace mountpoint old_disk new_disk

The copy usually takes place at 90% of the available platter speed if no additional disk I/O is ongoing during the copy operation. The operation takes place at runtime on a live filesystem, it does not require to unmount it or stop active tasks, and it is safe to crash or lose power during the operation, the process will resume with the next mount. It's also possible to use the command "btrfs replace status" to check the status of the operation, or "btrfs replace cancel" to cancel it. The userspace patches for the btrfs program can be found [git://btrfs.giantdisaster.de/git/btrfs-progs here].

Code: [[https://git.kernel.org/linus/ff023aac31198e88507d626825379b28ea481d4d|(commit 1]], [[https://git.kernel.org/linus/e93c89c1aaaaaec3487c4c18dd02360371790722|2]], [[https://git.kernel.org/linus/3f6bcfbd4149875662773eb40a62294cddf215d4|3]], [[https://git.kernel.org/linus/ad6d620e2a5704f6bf3a39c92a75aad962c51cb3|4]], [[https://git.kernel.org/linus/8dabb7420f014ab0f9f04afae8ae046c0f48b270|5]], [[https://git.kernel.org/linus/b8b8ff590f99678616f9ea85f5088542d1cfc0be|6)]]


== F2FS, a SSD friendly file system ==

F2FS is a new experimental file system, contributed by Samsung, optimized for flash memory storage devices. Linux has several file systems targeted for flash devices -logfs, jffs2, ubifs-, but they are designed for "native" flash devices that expose the flash storage device directly to the computer. Many of the flash storage devices commonly used (SSD disks) aren't "native" flash devices. Instead, they have a FTL ("flash translation layer") that emulates a block based device and hides the true nature of flash memory devices. This makes possible to use the existing block storage stacks and file systems in those devices. These file systems have made some optimizations to work better with SSDs (like [[https://en.wikipedia.org/wiki/TRIM|trimming]]). But the filesystem formats don't make changes to optimize for them.

F2FS is a filesystem for SSDs that tries to keep in mind the existence of the Flash Translation Layer, and tries to make good use of it. For more details about the design choices made by F2FS, reading the following LWN article is recommended:

Recommended LWN article: [[https://lwn.net/Articles/518988/|An f2fs teardown]]

Code: [[https://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=tree;f=fs/f2fs;hb=HEAD|fs/f2fs]]


== User namespace support completed ==

Per-process namespaces allow to have different namespaces for several resources. For example, a process might see a set mountpoints, PID numbers, and network stack state, and a process in other namespace might see others. The per-process namespace support has been developed for many years: The command [[http://linux.die.net/man/1/unshare|unshare(1)]], available in modern linux distros, allows to start a process with the mount, UTS, IPC or network namespaces "unshared" from its parent; and systemd uses mount namespaces for the {{{ReadWriteDirectories, ReadOnlyDirectories or InaccessibleDirectories}}} unit configuration options, and for systemd-nspawn. But the use of namespaces was limited only to root.

This release adds is the ability for unprivileged users to use per-process namespaces safely. The resources with namespace support available are filesystem mount points, UTS, IPC, PIDs, and network stack.

For more details about the Linux namespace support, what they are, how they work, details about the API and some example programs, you should read the article series from LWN

    Namespaces in operation, [[https://lwn.net/Articles/531114/|part 1: namespaces overview]]

    Namespaces in operation, [[https://lwn.net/Articles/531381/|part 2: the namespaces API]]

    Namespaces in operation, [[https://lwn.net/Articles/532271/|part 3: PID namespaces]]

    Namespaces in operation, [[https://lwn.net/Articles/532748/|part 4: more on PID namespaces]]

(The remaining namespaces will be covered in future LWN articles)

== XFS log checksums ==

XFS is planning to add [[http://www.youtube.com/watch?v=FegjLbCnoBw|full metadata checksumming in the future]]. As part of that effort, this release adds support for checksums in the journal.

Code: [[https://git.kernel.org/linus/bc02e8693d875c2a9b0037cfd37fe0b726d26403|(commit 1]], [[https://git.kernel.org/linus/0e446be44806240c779666591bb9e8cb0e86a50d|2)]]


== Huge Pages support a zero page ==

[[http://kernelnewbies.org/Linux_2_6_38#head-f28790278bf537b4c4869456ad7b84425298708b|Huge pages]] are a type of memory pages provided by the CPU memory management unit, which are much bigger than usual. They are typically used by big databases and applications which maker use of large portions of memory. In the other hand, a "zero page" is a memory page full of zeros. This page is used by the kernel to save memory: some applications allocate large portions of memory full of zeros but they don't write to all parts of it, so instead of allocating that zeroed memory, the kernel just makes all the memory point to the zero page. The zero page was only available for normal sized pages (4KB in x86), this release adds a zero huge page for applications that use huge pages.

Recommended LWN article: [[https://lwn.net/Articles/517465/|Adding a huge zero page]]

Code: [[https://git.kernel.org/linus/d8a8e1f0da3d29d7268b3300c96a059d63901b76|(commit 1]], [[https://git.kernel.org/linus/3ea41e6210fea3b234b6cb3e9443e75975850bbf|2]], [[https://git.kernel.org/linus/e180377f1ae48b3cbc559c9875d9b038f7f000c6|3]], [[https://git.kernel.org/linus/cad7f613c4d010e1d0f05c9a4fb33c7ae40ba115|4]], [[https://git.kernel.org/linus/fc9fe822f7112db23e51e2be3b886f5d8f0afdb6|5]], [[https://git.kernel.org/linus/93b4796dede916de74b21fbd637588da6a99a7ec|6]], [[https://git.kernel.org/linus/4a6c1297268c917e9c50701906ba2f7e06812299|7]], [[https://git.kernel.org/linus/97ae17497e996ff09bf97b6db3b33f7fd4029092|8]], [[https://git.kernel.org/linus/c5a647d09fe9fc3e0241c89845cf8e6220b916f5|9]], [[https://git.kernel.org/linus/79da5407eeadc740fbf4b45d6df7d7f8e6adaf2c|10]], [[https://git.kernel.org/linus/78ca0e679203bbf74f8febd9725a1c8dd083d073|11]], [[https://git.kernel.org/linus/80371957f09814d25c38733d2d08de47f59a13c2|12]], [[https://git.kernel.org/linus/479f0abbfd253d1117a35c1df12755d27a2a0705|13)]]

== The memory resource controller supports accounting of kernel memory ==

The Linux memory controller is a [[https://en.wikipedia.org/wiki/Cgroups|control group]] that can limit, account and isolate memory usage to arbitrary groups of processes. In this release, the memory controller has got support for accounting two types uses of kernel memory usage: stack and slab usage. These limits can be useful for things like stopping fork bombs.

The files created in the control group are:

    memory.kmem.limit_in_bytes: set/show hard limit for kernel memory

    memory.kmem.usage_in_bytes: show current kernel memory allocation

    memory.kmem.failcnt: show the number of kernel memory usage hits limits

    memory.kmem.max_usage_in_bytes:  show max kernel memory usage recorded


Recommended LWN article: [[https://lwn.net/Articles/516529/|KS2012: memcg/mm: Improving kernel-memory accounting for memory cgroups]]

== Automatic NUMA balancing ==

A lot of modern machines are "non uniform memory access" (NUMA) architectures: they have per-processor memory controllers, and accessing the memory in the local processor is faster than accessing the memory of other processors, so the placement of memory in the same node where processes will reference it is critical for performance. This is specially true in huge boxes with docens or hundreds of processors.

The Linux NUMA implementation had some deficiencies. This release includes a new NUMA foundation which will allow to build smarter NUMA policies in the next releases. For more details, see the LWN article:

Recommended LWN article: [[https://lwn.net/Articles/524977/|NUMA in a hurry]]


Some parts of the code: [[https://git.kernel.org/linus/510fc4e11b772fd60f2c545c64d4c55abd07ce36|(commit 1)]], [[https://git.kernel.org/linus/7ae1e1d0f8ac2927ed7e3ca6d15e42d485903459|2]], [[https://git.kernel.org/linus/7a64bf05b2a6fe3703062d13d389e3eb904741c6|3]], [[https://git.kernel.org/linus/6a1a0d3b625a4091e7a0eb249aefc6a644385149|4]], [[https://git.kernel.org/linus/d79923fad95b0cdf7770e024677180c734cb7148|5]], [[https://git.kernel.org/linus/d5bdae7d59451b9d63303f7794ef32bb76ba6330|6]], [[https://git.kernel.org/linus/92e793495597af4135d94314113bf13eafb0e663|7)]]

== Removal of support for 386 processors ==

As it has been widely reported, this release no longer supports the Intel 386 processor (486 is still supported, though)

Code: [[https://git.kernel.org/?p=linux/kernel/git/torvalds/743aa456c1834f76982af44e8b71d1a0b2a82e21|(commit)]]


= Driver and architecture-specific changes =
All the driver and architecture-specific changes can be found in the [[http://kernelnewbies.org/Linux_3.8_DriverArch|Linux_3.8_DriverArch page]]

= Various core changes =
 * modules: add syscall to load module from file descriptor. Contributed by Chrome OS, who wants to be able to enforce that kernel modules are being loaded only from their read-only crypto-hash verified (dm_verity) root filesystem. Related LWN article: [[https://lwn.net/Articles/519010/|Loading modules from file descriptors]],[[https://git.kernel.org/linus/34e1169d996ab148490c01b65b4ee371cf8ffba2|(commit)]], [[https://git.kernel.org/linus/2f3238aebedb243804f58d62d57244edec4149b2|(commit)]]
 * Support more page sizes for MAP_HUGETLB/SHM_HUGETLB, as some large applications want to use 1GB huge pages on some mappings [[https://git.kernel.org/linus/42d7395feb56f0655cd8b68e06fc6063823449f8|(commit)]]
 * Enable to assign a node which has only movable memory, so that the whole memory of the node can be hotplugged [[https://git.kernel.org/linus/c2974058a9caa82c9dd9e1e11e4f2c6ce42ff17e|(commit)]], [[https://git.kernel.org/linus/20b2f52b73febce476fc9376f0296c1aa0e4f5a7|(commit)]]
 * SYSV IPC
  * Add 3 new variables and sysctls to tune them. This variable can be used to set desired ID for next allocated IPC object. Used by [[http://criu.org/|checkpoint/restart]] [[https://git.kernel.org/linus/03f595668017f1a1fb971c02fc37140bc6e7bb1c|(commit)]]
  * Introduce message queue copy feature, needed by [[http://criu.org/|checkpoint/restart]], as it requires some way to get all pending IPC messages without deleting them from the queue [[https://git.kernel.org/linus/4a674f34ba04a002244edaf891b5da7fc1473ae8|(commit)]]
 * [[https://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=blob;f=Documentation/cgroups/freezer-subsystem.txt;hb=HEAD|freezer cgroup]]: implement proper hierarchy support [[https://git.kernel.org/linus/ef9fe980c6fcc1821ab955b74b242d2d6585fa75|(commit)]]
 * ptrace: introduce PTRACE_O_EXITKILL. If the tracer exits it sends SIGKILL to every tracee which has this bit set [[https://git.kernel.org/linus/992fb6e170639b0849bace8e49bf31bd37c4123c|(commit)]]
 * procfs: add VmFlags field in smaps output, as checkpoint/restart needs to get these VMA associated flags [[https://git.kernel.org/linus/834f82e2aa9a8ede94b17b656329f850c1471514|(commit)]]
 * tmpfs: support [[http://linux.die.net/man/2/lseek|SEEK_DATA and SEEK_HOLE]] lseek() flags [[https://git.kernel.org/linus/220f2ac91353dd8b239b70c4b4cf1615b80c1ff5|(commit)]]
 * tty: Add new ioctl flags for TTY flags fetching. TIOCGPKT, TIOCGPTLCK, TIOCGEXCL for fetching PTY's packet mode and locking state, and exclusive mode of TTY [[https://git.kernel.org/linus/c6298038bcfc20710430a4ad069bb1f3f069997c|(commit)]]
 * RCU locking: Add a module parameter to force use of expedited RCU primitives [[https://git.kernel.org/linus/3705b88db0d7cc4a097c32d9e554054103d3f807|(commit)]], add callback-free CPUs, as RCU callback execution can add significant OS jitter and also can degrade both scheduling latency [[https://git.kernel.org/linus/3fbfbf7a3b66ec424042d909f14ba2ddf4372ea8|(commit)]]
 * PCI: Single Root I/O Virtualization control and status via sysfs [[https://git.kernel.org/linus/1789382a72a537447d65ea4131d8bcc1ad85ce7b|(commit)]]
  * devfreq: Add sysfs node to expose available frequencies [[https://git.kernel.org/linus/d287de855f97c56ca7146ff627e652bd7cd64f3f|(commit)]]
 * Power Management
  * Make it possible to expose PM QoS device flags to user space [[https://git.kernel.org/linus/e39473d0b9448e770f49b0b15e514be884264438|(commit)]]
  * Add sysfs node for representing frequency transition information. [[https://git.kernel.org/linus/e552bbaf5b987f57c43e6981a452b8a3c700b1ae|(commit)]]


= Filesystems =
 * ext4
  * Disable the ability to disable extended attributes [[https://git.kernel.org/linus/939da1084458246d2e29dd921c2012c177000e96|(commit)]]
  * Introduce [[http://linux.die.net/man/2/lseek|lseek() SEEK_DATA/SEEK_HOLE]] support [[https://git.kernel.org/linus/c0677e6d0f9d991adff972b8d06cb83de1f8ee8e|(commit 1)]], [[https://git.kernel.org/linus/654598bef3731c9ae9b068ac35e6b69674c02841|2]], [[https://git.kernel.org/linus/9a26b66175e1c221f39bbe09e2e1d0a31a14ba6d|3]], [[https://git.kernel.org/linus/c8c0df241cc2719b1262e627f999638411934f60|4]], [[https://git.kernel.org/linus/51865fda28e585bdcc164474ff6438a9ccdbfada|5)]]

 * XFS
  * Add XFS_IOC_FREE_EOFBLOCKS ioctl, which allows users to invoke an EOFBLOCKS scan. EOFBLOCKS inodes are inodes with speculatively preallocated blocks beyond EOF [[https://git.kernel.org/linus/27b52867925e3aaed090063c1c58a7537e6373f3|(commit 1]], [[https://git.kernel.org/linus/8ca149de80478441352a8622ea15fae7de703ced|2]], [[https://git.kernel.org/linus/579b62faa5fb16ffeeb88cda5e2c4e95730881af|3)]]

 * GFS2
  * Add [[https://en.wikipedia.org/wiki/Orlov_block_allocator|Orlov]] block allocator [[https://git.kernel.org/linus/9dbe9610b9df4efe0946299804ed46bb8f91dec2|(commit)]]
  * Speed up gfs2_rbm_from_block function, which speeds up the Postmark benchmark (see commit) [[https://git.kernel.org/linus/a68a0a352a0209467268dfddffe02db08b97ddb4|(commit)]]
 * SMB: Add SMB2.02 dialect support by specifying vers=2.0 on mount [[https://git.kernel.org/linus/dd446b16edd74ca525208d924d426f786dd973f8|(commit)]]

= Block =
 * raid6: Add [[https://en.wikipedia.org/wiki/Advanced_Vector_Extensions#Advanced_Vector_Extensions_2|AVX2]] optimized functions [[https://git.kernel.org/linus/2c935842bdb46f5f557426feb4d2bdfdad1aa5f9|(commit)]], [[https://git.kernel.org/linus/7056741fd9fc14a65608549a4657cf5178f05f63|(commit)]]

= Crypto/keyring =
 * camellia: add AES-NI/AVX/x86_64 assembler implementation of Camellia cipher [[https://git.kernel.org/linus/d9b1d2e7e10d2e926775b1d3da39da0f51491e54|(commit)]]
 * crc32c: Optimize CRC-32C calculation with PCLMULQDQ instruction [[https://git.kernel.org/linus/6a8ce1ef3940e0cab5ff5f11e1cff5301f83fef6|(commit)]]
 * keyring: Make the session and process keyrings per-thread rather than per-process, but still inherited from the parent thread to solve [[https://bugs.freedesktop.org/show_bug.cgi?id=49211|a problem]] with PAM and GDM [[https://git.kernel.org/linus/3a50597de8635cd05133bd12c95681c82fe7b878|(commit)]]
 * keyring: Reduce initial permissions on keys, this gives the creator a chance to adjust the permissions mask before other processes can access the new key or create a link to it [[https://git.kernel.org/linus/96b5c8fea6c0861621051290d705ec2e971963f1|(commit)]]


= Security =
 * Smack: create a sysfs mount point for Smackfs at /sys/fs/smackfs [[https://git.kernel.org/linus/e93072374112db9dc86635934ee761249be28370|(commit)]]
 * Add "Seccomp" field at /proc/pid/status, necessary to examine the state of seccomp for a given
process [[https://git.kernel.org/linus/2f4b3bf6b2318cfaa177ec5a802f4d8d6afbd816|(commit)]]

= Perf =
 * Integrate script browser into main browser. Users can press function key 'r' to list all perf scripts and select one of them to run that script, the output will be shown in a separate browser [[https://git.kernel.org/linus/66517826664fa910d4bc5f32a5abff6bcd8657c5|(commit 1]], [[https://git.kernel.org/linus/cdbab7c201ab38f7b8d248ebf289025381166526|2]], [[https://git.kernel.org/linus/79ee47faa77706f568f0329b7475c123b67a3b4a|3)]]
 * diff: Add -b option for perf diff to display paired entries only [[https://git.kernel.org/linus/a06d143e7cfaa10626f3ad0127a9b9169f900add|(commit)]], add -p option to display period values for hist entries [[https://git.kernel.org/linus/61949b212e7f6f8f31891236ba24033f9b7af8c3|(commit)]], add option to sort entries based on diff computation [[https://git.kernel.org/linus/96c47f19846742bdfa3c153c8d26ccca5945586b|(commit)]], add -F option to display formula for computation [[https://git.kernel.org/linus/ed279da2fc9774b4c0dc9fd513fa89a11cae3f56|(commit)]], add ratio computation way to compare hist entries [[https://git.kernel.org/linus/7aaf6b35512382329c5b2dd46b42f2bf12a5fff0|(commit)]]
 * inject: "perf inject" can only handle data from pipe. Now it works with files too [[https://git.kernel.org/linus/e558a5bd8b74aff4690a8c55b08a1dc91ef50d7c|(commit)]]
 * stat: Add --pre and --post command [[https://git.kernel.org/linus/1f16c5754d3a4008c29f3bf67b4f1271313ba385|(commit)]]
 * Add gtk.<command> config option for launching GTK browser [[https://git.kernel.org/linus/0020ce23864d16f66e5667013b8b43d1df3e142e|(commit)]]
 * trace: Add an event duration column [[https://git.kernel.org/linus/60c907abc635622964f7862c8f2977182124f89d|(commit)]], add duration filter [[https://git.kernel.org/linus/ae9ed03579c9745e85a88e80522770df7ae5c9b7|(commit)]], support interrupted syscalls [[https://git.kernel.org/linus/752fde44fd1c4a411d709c7d4ad0f121f427f234|(commit)]], use sched:sched_stat_runtime to provide a thread summary [[https://git.kernel.org/linus/1302d88e66f12a7b46a5598e641d93f0713007e0|(commit)]]
 * x86: Make hardware event translations available in sysfs /sys/devices/cpu/events/ [[https://git.kernel.org/linus/a47473939db20e3961b200eb00acf5fcf084d755|(commit)]]
 * tracing: Add trace_options kernel command line parameter [[https://git.kernel.org/linus/7bcfaf54f591a0775254c4ea679faf615152ee3a|(commit)]]


= Virtualization =
 * KVM: paravirtual clock vsyscall support. It reduces clock_gettime from 500 cycles to 200 cycles in a testbox https://git.kernel.org/linus/3dc4f7cfb7441e5e0fed3a02fc81cdaabd28300a (commit)], [[https://git.kernel.org/linus/51c19b4f5927f5a646e93d69f73c7e89ea14e737|(commit)]]
 * virtio-net: multiqueue support [[https://git.kernel.org/linus/986a4f4d452dec004697f667439d27c3fda9c928|(commit)]], support changing the number of queue pairs through ethtool [[https://git.kernel.org/linus/d73bcd2c28e3c77d9f52d42a45a52455488e287e|(commit)]]
 * virtio-console: Add support for remoteproc serial [[https://git.kernel.org/linus/1b6370463e88b0c1c317de16d7b962acc1dab4f2|(commit)]]
 * vhost-net: enable zerocopy tx by default [[https://git.kernel.org/linus/f9611c43ab0ddaf547b395c90fb842f55959334c|(commit)]]
 * Add Microsoft Hyper-V balloon driver [[https://git.kernel.org/linus/9aa8b50b2b3d3a70728438a15a0fdd03a6794a84|(commit)]]
 * Xen: ACPI PAD driver [[https://git.kernel.org/linus/92e3229dcdc80ff0b6304f14c578d76e7e10e226|(commit)]]

= Networking =
 * [[http://www.linuxfoundation.org/collaborate/workgroups/networking/bridge|bridge]]
  * Allow to dump, monitor, and change the bridge multicast database using Netlink [[https://git.kernel.org/linus/25c71c75ac87508528db053b818944f3650dd7a6|(commit)]], [[https://git.kernel.org/linus/cfd567543590f71ca0af397437e2554f9756d750|(commit)]].
  * Bridge port parameters over Netlink and BPDU blocking support [[https://git.kernel.org/linus/1007dd1aa50b0403df370834f647abef1722925c|(commit)]], [[https://git.kernel.org/linus/a2e01a65cd7135dab26d27d4b589b2e5358bec99|(commit)]]

 * Wireless 
  * Allow to abort low priority scan requests [[https://git.kernel.org/linus/cd2bb512cda58f1efb922ad6dc29013ea5d5d9d0|(commit)]]
  * Allow to flush old scan results [[https://git.kernel.org/linus/15d6030b4bec618742b8b9ccae9209c8f9e4a916|(commit)]]
  * Allow drivers to support P2P GO powersave configuration [[https://git.kernel.org/linus/339afbf4819e5c7c0a0422af43b8c2eccd059abf|(commit)]]
  * Provide partial VHT radiotap information [[https://git.kernel.org/linus/5164892184d1b9ce19e45e97e9ca405ea8b9ceb2|(commit)]]
  * Support VHT association [[https://git.kernel.org/linus/f2d9d270c15ae0139b54a7e7466d738327e97e03|(commit)]]
  * Allow per interface TX power setting, instead of per device [[https://git.kernel.org/linus/c8442118ad9cd05cfe3b993f058e70ab25b1009a|(commit)]]
  * Add the NL80211_CMD_SET_MCAST_RATE command, which enables the user to change the rate used to send multicast frames for vif configured as IBSS or MESH_POINT [[https://git.kernel.org/linus/f4e583c8935c6f52f9385ee7cfbea8f65c66a737|(commit)]]
  * Support P2P GO powersave configuration [[https://git.kernel.org/linus/53cabad70ecf0c245b41285de64a74a6c3ee9933|(commit)]]
 * RFC 5961 5.2 TCP blind data injection attack mitigation [[https://git.kernel.org/linus/354e4aa391ed50a4d827ff6fc11e0667d0859b25|(commit)]]
 * Change default TCP hash size to be more in line with current day realities. The existing heuristics were chosen a decade ago [[https://git.kernel.org/linus/fd90b29d757827ab12d6669292612308ec249532|(commit)]]
 * Support for checksum offload of encapsulated packets (basically, tunneled traffic can still be checksummed by HW) [[https://git.kernel.org/linus/6a674e9c75b17e7a88ff15b3c2e269eed54f7cfb|(commit)]]

 * [[http://www.open-mesh.org/projects/open-mesh/wiki|B.A.T.M.A.N. mesh]]: Add Distributed ARP Table, a DHT-based mechanism that increases ARP reliability on sparse wireless mesh networks [[https://git.kernel.org/linus/5c3a0e5535933349a5d6e6bc8b704e0611f21d3f|(commit 1]], [[https://git.kernel.org/linus/0e861a3c4ffef56822e1d51c355e5020deaeaf5a|2]], [[https://git.kernel.org/linus/172244748204c894864def59133d0133ccfabe30|3]], [[https://git.kernel.org/linus/33af49ad8ae44de52c0ac30b1a9707dad5e4c418|4]], [[https://git.kernel.org/linus/c384ea3ec930ef11060a7308fbbd02b4871384f9|5]], [[https://git.kernel.org/linus/785ea1144182c341b8b85b0f8180291839d176a8|6]], [[https://git.kernel.org/linus/2f1dfbe185075a50dc8f0490a136377af53a1c62|7)]]
 * Allow BPF filter access to VLAN tags [[https://git.kernel.org/linus/f3335031b9452baebfe49b8b5e55d3fe0c4677d1|(commit)]]
 * Support Distributed Overlay Virtual Ethernet (DOVE) extensions for VXLAN [[https://git.kernel.org/linus/e4f67addf158f98f8197e08974966b18480dc751|(commit)]]
 * Openvswitch: add IPv6 'set' action [[https://git.kernel.org/linus/3fdbd1ce11e5c0d7cafbe44c942c5cad61113d7b|(commit)]]

 * IPv6: add support of equal-cost multi-path (ECMP) routing [[https://git.kernel.org/linus/51ebd3181572af8d5076808dab2682d800f6da5d|(commit)]]
 * IPIP tunnel: add GSO support [[https://git.kernel.org/linus/c3b89fbba339aae533e380839fa078787635356e|(commit)]]
 * IPvs: Complete IPv6 fragment handling for IPVS [[https://git.kernel.org/linus/2f74713d1436b7d2d0506ba1bc5f10915a73bbec|(commit)]]
 * Netfilter
  * ipv6: add getsockopt to retrieve origdst [[https://git.kernel.org/linus/121d1e0941e05c64ee4223064dd83eb24e871739|(commit)]]
  * xt_CT: recover NOTRACK target support [[https://git.kernel.org/linus/10db9069eb5c60195170a4119bdbcbce69a4945f|(commit)]]
 * pkt_sched: turn QFQ into QFQ+, a variant of QFQ that provides some benefits [[https://git.kernel.org/linus/462dbc9101acd38e92eda93c0726857517a24bbd|(commit)]]
 * tuntap: multiqueue support [[https://git.kernel.org/linus/c8d68e6be1c3b242f1c598595830890b65cea64a|(commit)]]
 * Add support of RTM_GETNETCONF [[https://git.kernel.org/linus/d900082bd9060dc955b181dae2f2adf86e27d747|(commit)]], [[https://git.kernel.org/linus/9e5511106f99f293ad4a55e1d35c2e909c0c2e60|(commit)]], [[https://git.kernel.org/linus/76f8f6cb76b110aaace90b6208b1ceb46bd78b7f|(commit)]]
 * SCTP: support per-association statistics [[https://git.kernel.org/linus/196d67593439b03088913227093e374235596e33|(commit)]]
 * SCTP: Make HMAC algorithm selection for cookie generation dynamic [[https://git.kernel.org/linus/3c68198e75111a905ac2412be12bf7b29099729b|(commit)]]

 * Add support of link creation via rtnl 'ip link .. type
 * IPv6 tunnel: add support of link creation via rtnl 'ip link .. type ip6tnl' [[https://git.kernel.org/linus/0b112457229d8a17198a02f3cca32922d2e374f1|(commit)]]
, add support of link creation via rtnl 'ip link .. type ipip' [[https://git.kernel.org/linus/be42da0e1012bf67d8f6899b7d9162e35527da4b|(commit)]]
 * sit: add support of link creation via rtnl 'ip link .. type sit' [[https://git.kernel.org/linus/f37234160233561f2a2e3332272ae5b3725b620b|(commit)]]
 * sk-filter: Add ability to get socket filter program (v2) [[https://git.kernel.org/linus/a8fc92778080c845eaadc369a0ecf5699a03bef0|(commit)]]


= Other news sites that track the changes of this release =
 * LWN [[https://lwn.net/Articles/528893/|Merge window part 1]], [[https://lwn.net/Articles/529313/|merge window part 2]]
 * H-Online Kernel Log - Coming in 3.8 [[http://www.h-online.com/open/features/Kernel-Log-Coming-in-3-8-Part-1-Filesystems-and-storage-1788524.html|Part 1: Filesystems and storage]], [[http://www.h-online.com/open/features/Kernel-Log-Coming-in-3-8-Part-2-Infrastructure-1801242.html|Part 2: Infraestructure]], [[http://www.h-online.com/open/features/Kernel-Log-Coming-in-3-8-Part-3-Drivers-1802696.html|Part 3: Drivers]]
 * Phoronix: [[http://www.phoronix.com/scan.php?page=news_item&px=MTI2MDg|The Feature Overview For The Linux 3.8 Kernel]]


----
 CategoryReleases
