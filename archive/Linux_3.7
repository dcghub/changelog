#pragma section-numbers on
#pragma keywords Linux, kernel, operating system, changes, changelog, file system, Linus Torvalds, open source, device drivers
#pragma description Summary of the changes and new features merged in the Linux kernel during the 3.7 development cycle

Linux 3.7 [[https://lkml.org/lkml/2012/12/10/688|has been released]] on 10 Dec 2012.

'''''Summary''''': This Linux release includes support for the ARM 64-bit architecture, ARM support to boot into different systems using the same kernel, signed kernel modules, Btrfs support for disabling copy-on-write on a per-file basis using chattr and faster fsync(), a new "perf trace" tool modeled after strace, support for the TCP Fast Open feature in the server side, experimental SMBv2 protocol support, stable NFS 4.1 and parallel NFS support, a new tunneling protocol that allows to transfer Layer 2 Ethernet packets over UDP, and support for the Intel "supervisor mode access prevention" (SMAP) security feature. Many small features and new drivers and fixes are also available.


<<TableOfContents>>
= Prominent features in Linux 3.7 =
== ARM multi-platform support ==

A typical Linux distribution for x86 PC computers can boot and work in hundreds of different PC (different CPU vendor, different GPU models, different motherboards and chipsets, etc) using a single distribution install media. This ability to be able to boot in different hardware configurations is taken as a given in the PC world. However, it didn't exist in the Linux ARM world. The ARM ecosystem has historically been driven by the embedded world, where hardware enumeration isn't even possible in many cases, so each ARM kernel image was targeted for a specific embedded hardware target. It couldn't boot in other ARM systems.

In this release, the Linux ARM implementation has added "multi-platform" support - the ability to build a single ARM kernel image that is able to boot multiple hardware. This will make much easier for distributors to support ARM platforms.

Recommended LWN article: [[http://lwn.net/Articles/496400/|Supporting multi-platform ARM kernels]]
Code: [[http://git.kernel.org/linus/387798b37c8dd0ae24c0ac12ba456dd76865bca3|(commit)]]

== ARM 64-bit support ==

The newest ARM CPU model, ARM v8, adds 64-bit memory addressing capabilities for first time for the ARM world. The new 64-bit CPUs can run 32 bits code, but the 64-bit instruction set is completely new, not just 64-bit extensions to the 32-bit instruction set, so the Linux support has been implemented as a completely new architecture.

Recommended LWN article: [[https://lwn.net/Articles/506148/|Supporting 64-bit ARM systems]]
Code: [[http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=tree;f=arch/arm64;hb=HEAD|arch/arm64]]

== Cryptographically-signed kernel modules ==

This release allows to optionally sign kernel modules. The kernel can optionally disable completely the load of modules that have not been signed with the correct key - even for root users. This feature is useful for security purposes, as an attacker who gains root user access will not be able to install a rootkit using the module loading routines.

Recommended LWN article: [[https://lwn.net/Articles/470906/|Loading signed kernel modules]]
Code: [[http://git.kernel.org/linus/106a4ee258d14818467829bf0e12aeae14c16cd7|(commit 1]], [[http://git.kernel.org/linus/48ba2462ace6072741fd8d0058207d630ce93bf1|2]], [[http://git.kernel.org/linus/ea0b6dcf71d216dc11733ac19b26df0f5d0fd6c2|3)]]


== Btrfs updates ==

 * fsync() speedups: The fsync() syscall writes the modified data of a file to the hard disk. The performance of fsync() is important for software like dpkg/rpm, Firefox, QEMU, etc. Btrfs fsync() performance has been quite bad, but in this release fsync can be several times faster. Code: [[http://git.kernel.org/linus/5dc562c541e1026df9d43913c2f6b91156e22d32|(commit 1]], [[http://git.kernel.org/linus/4e2f84e63dc138eca91e89ccbc34f37732ce58f7|2)]]

 * Remove the hard link limits inside a single directory: Btrfs didn't allow to create more than about 20 hardlinks in the same directory. A disk format change has been added to add a new kind of "inode references" that lifts the hard link limit in a directory up to 65K [[http://git.kernel.org/linus/f186373fef005cee948a4a39e6a14c2e5f517298|(commit)]]

 * Hole punching: "Hole punching" is the ability to deallocate a range of space in a file (using the fallocate() syscall with the FALLOC_FL_PUNCH_HOLE mode). Btrfs now supports this feature. Code: [[http://git.kernel.org/linus/2aaa66558172b017f36bf38ae69372813dedee9d|(commit)]]

 * chattr per-file NOCOW support: Btrfs can disable copy-on-write for file data using the "nodatacow" mount option. In this version it also has added support for disabling copy-on-write for file data in a per-file basis using the "chattr +C file" (needs a [[http://git.kernel.org/?p=fs/ext2/e2fsprogs.git;a=commit;h=0796e660859724f304155e094b6cf5739a610ae4|recent e2fsprogs]]). Copy-on-write does not fit all workloads, and some applications want to disable it to get better fragmentation and performance behaviour. Note: in order to disable copy-on-write you need to use chattr in a empty file, it won't work in a file that already has data (in that case, you can create a temporary file, disable COW, copy the data, and rename the file). Note 2: disabling copy-on-write will also disable checksum support for that file. Note 3: it is possible to use chattr +C on a directory, and the new files created after issuing the command will get disabled COW support. Code: [[http://git.kernel.org/linus/7e97b8daf63487c20f78487bd4045f39b0d97cf4|(commit)]]


== perf trace, an alternative to strace ==

The perf profiling infrastructure has added a new tool "perf trace". This tool should look loosely like the venerable 'strace' tool, but instead of using the ptrace() syscall, it uses the Linux tracing infrastructure. Its purpose is to make tracing easier for a wider audience of Linux users.

pert trace will show the events associated with the target, initially syscalls, but other system events like pagefaults, task lifetime events, scheduling events, etc. This tool is still in its early versions, so it is a live mode only tool and a lot of details things need to be improved, but eventually will work with perf.data files like the other perf tools, allowing a detached 'record' from analysis phases.

Code: [[http://git.kernel.org/linus/514f1c67c2fdae7b334fdc5adee63a484781241a|(commit)]]


== TCP Fast Open (server side) ==

Linux already added TCP Fast Open support for clients [[http://kernelnewbies.org/Linux_3.6#head-ac78950a7b57d92d5835642926f0e147c680b99c|in 3.6]]. This release adds the Fast Open support for the server side, making the support of TCP Fast Open complete on Linux.

"Fast Open" is a optimization to the process of stablishing a TCP connection that allows the elimination of one round time trip from certain kinds of TCP conversations. Fast Open could result in speed improvements of between 4% and 41% in the page load times on popular websites.

Recommended LWN article: [[https://lwn.net/Articles/508865/|TCP Fast Open: expediting web services]]

Code: [[http://git.kernel.org/linus/1046716368979dee857a2b8a91c4a8833f21b9cb|(commit 1]], [[http://git.kernel.org/linus/168a8f58059a22feb9e9a2dcc1b8053dbbbc12ef|2]], [[http://git.kernel.org/linus/8336886f786fdacbc19b719c1f7ea91eb70706d4|3)]]


== Experimental SMB 2 protocol support ==
/!\ Note /!\ : The changelog of the previous kernel release, 3.6, mentioned SMBv2 support, but it was a mistake. SMBv2 support wasn't actually available in Linux 3.6, it was merged but [[https://plus.google.com/u/0/107616711159256259828/posts/6A15szm5y1b|it got turned off]] before the final release. It is finally available in this release. 

The CIFS networking filesystem has added support for the [[http://en.wikipedia.org/wiki/Server_Message_Block#SMB2|version 2 of the SMB protocol]]. The SMB2 protocol is the successor to the popular CIFS and SMB network file sharing protocols, and is the native file sharing mechanism for Windows operating systems since it was introduced in Windows Vista in 2006. SMB2 enablement will eventually allow users better performance, security and features, than would not be possible with previous protocols. 

Code: [[http://git.kernel.org/linus/ba02e89915afcfc9a071a86e5cae32f77c7d353a|(commit)]]

== NFS v4.1 support no longer experimental ==

The support for NFS v4.1 ([[http://tools.ietf.org/html/rfc5661|RFC 5661]]) has been going on for a long time, and in this release it will get rid of the the "experimental" tag for first time.

The main feature of NFS v4.1 is pNFS, aka "parallel NFS". pNFS can take advantage of clustered server deployments allowing to provide scalable parallel access to a given filesystem or individual files distributed among multiple servers. A single filesystem might be stripped across several servers, either at the file or block level.

Code: [[http://git.kernel.org/linus/8544a9dc18a1aa787b85425ecc9233b0a9adaff4|(commit)]]


== Virtual extensible LAN tunneling protocol ==

Linux adds vxlan, a tunneling protocol that allows to transfer Layer 2 Ethernet packets over UDP. vxlan is often used to tunnel virtual network infrastructure in virtualized environments. 

The VXLAN protocol itself, which is a [[http://tools.ietf.org/html/draft-mahalingam-dutt-dcops-vxlan-02|RFC draft]] right now, is a tunnelling protocol that is designed to solve the problem of limited number of available VLANs (4096). With vxlan the identifier is expanded to 24 bits. The protocol runs over UDP using a single destination port. Unlike most tunnels, a VXLAN is a 1 to N network, not just point to point. A VXLAN device can either dynamically learn the IP address of the other end, in a manner similar to a learning bridge, or the forwarding entries can be configured statically. There is also an implantation of VXLAN for Open vSwitch.

Recommended articles: [[http://linux-network-plumber.blogspot.com.es/2012/09/just-published-linux-kernel.html|VXLAN for Linux]], [[http://it20.info/2012/05/typical-vxlan-use-case/|Typical VXLAN use case]]

Code: [[http://git.kernel.org/linus/d342894c5d2f8c7df194c793ec4059656e09ca31|(commit)]]

== Intel "supervisor mode access prevention" support ==

Supervisor Mode Access Prevention (SMAP) is a new security feature that will be available in future Intel processors. It forbids kernel access to memory pages used by userspace. This allows to stop some kind of exploits.

Recommended Intel documentation: [[http://software.intel.com/sites/default/files/319433-014.pdf|Intel® Architecture Instruction Set Extensions Programming Reference]]

Recommended LWN article: [[https://lwn.net/Articles/517475/|Supervisor mode access prevention]]


= Driver and architecture-specific changes =
All the driver and architecture-specific changes can be found in the [[http://kernelnewbies.org/Linux_3.7_DriverArch|Linux_3.7_DriverArch page]]
= Various core changes =
 * Linux 3.6 added some [[https://lwn.net/Articles/503660/|symlink and hardlink restrictions]] for security purposes, and enabled it by default, but it broke some programs, so it has been disabled by default. Distributions and users can enable it by writing "1" to /proc/sys/fs/protected_symlinks and /proc/sys/fs/protected_hardlinks [[http://git.kernel.org/linus/561ec64ae67ef25cac8d72bb9c4bfc955edfd415|(commit)]]
 * Make core dump functionality optional [[http://git.kernel.org/linus/046d662f481830e652ac34cd112249adde16452a|(commit)]]
 * Teach the kernel to load firmware files directly from the filesystem instead of using udev [[http://git.kernel.org/linus/abb139e75c2cdbb955e840d6331cb5863e409d0e|(commit)]]
 * Add xattr support to cgroups [[http://git.kernel.org/linus/03b1cde6b22f625ae832b939bc7379ec1466aec5|(commit)]]
 * kdb: Implement disable_nmi command to disable NMI-entry [[http://git.kernel.org/linus/ad394f66fa57ae66014cb74f337e2820bac4c417|(commit)]]
 * Add special serial console driver that allows to temporary use NMI debugger port as a normal console [[http://git.kernel.org/linus/0c57dfcc6c1d037243c2f8fbf62eab3633326ec0|(commit)]]

 * Read-Copy-Update (RCU) locking
  * Control grace-period duration from sysfs [[http://git.kernel.org/linus/d40011f601b450396104de42c631981502946cf0|(commit)]]
  * Make rcutree module parameters visible in sysfs [[http://git.kernel.org/linus/7e5c2dfb4de15e21f62c956ec32cda9372ca993b|(commit)]]
  * Consider userspace as in RCU extended quiescent state: this option sets hooks on kernel / userspace boundaries and puts RCU in extended quiescent state when the CPU runs in userspace. It means that when a CPU runs in userspace, it is excluded from the global RCU state machine and thus doesn't to keep the timer tick on for RCU [[http://git.kernel.org/linus/2b1d5024e17be459aa6385763ca3faa8f01c52d9|(commit)]]

= Filesystems =
 * ext4
  * Speed up truncate/unlink [[http://git.kernel.org/linus/18888cf0883c286f238d44ee565530fe82752f06|(commit)]]
  * Add online resizing support for meta_bg and 64-bit file systems [[http://git.kernel.org/linus/01f795f9e0d67adeccc61a8b20c28acb45fa5fd8|(commit)]]
  * Add max_dir_size_kb mount option, that allows to ensure that directories never get larger than a sane size [[http://git.kernel.org/linus/df981d03eeff7971ac7e6ff37000bfa702327ef1|(commit)]]
  * Re-enable -o discard functionality in no-journal mode [[http://git.kernel.org/linus/b5e2368baeddf401bf3da9e364fc1c96676279cd|(commit)]]

 * Btrfs:
  * Make compress and nodatacow mount options mutually exclusive [[http://git.kernel.org/linus/bedb2cca7252d08c6ca3085826e30f65bdc3b54b|(commit)]]
  * Do not async metadata csumming in certain situations (makes O_SYNC faster) [[http://git.kernel.org/linus/de0022b9da616b95ea5b41eab32da825b0b5150f|(commit)]]

 * XFS
  * Make inode32 a remountable option [[http://git.kernel.org/linus/2ea0392983a82f7dc3055568ae0f2558724d119b|(commit)]], make inode64 a remountable option [[http://git.kernel.org/linus/c3a58fecdd1934a8538ada9073107625f5151687|(commit)]]
  * Make inode64 as the default allocation mode [[http://git.kernel.org/linus/08bf540412ed82a15cb9068249ad49b410a7b082|(commit)]]

 * UDF
  * Add support for O_DIRECT [[http://git.kernel.org/linus/5eec54fcde7e065eb3d8a6e70e61d90673ca706b|(commit)]]
  * Add "writepages" support for UDF for improved write performance [[http://git.kernel.org/linus/378b8e1ad18e7c97832aa3771e295153c4cd2a55|(commit)]]

 * JFS: TRIM support [[http://git.kernel.org/linus/b40c2e665cd552eae5fbdbb878bc29a34357668e|(commit)]]

 * NFS: Introduce "migration" mount option [[http://git.kernel.org/linus/896526174ce2b6a773e187ebe5a047b68230e2c4|(commit)]]

= Block =
 * Implement support for the WRITE SAME command supported on some SCSI devices. This command allows the same block to be efficiently replicated throughout a block range. Only a single logical block is transferred from the host and the storage device writes the same data to all blocks described by the I/O [[http://git.kernel.org/linus/4363ac7c13a9a4b763c6e8d9fdbfc2468f3b8ca4|(commit)]]
 * ioctl to zero block ranges [[http://git.kernel.org/linus/66ba32dc167202c3cf8c86806581a9393ec7f488|(commit)]]
 * UBI (Unsorted Block Images), targeted for flash devices: Fastmap support. Fastmap is a mechanism which allows attaching an UBI device in nearly constant time. Instead of scanning the whole MTD device it only has to locate a checkpoint (called fastmap) on the device. The on-flash fastmap contains all information needed to attach the device [[http://git.kernel.org/linus/dbb7d2a88d2a7bd3624e090bee42cdee048d9290|(commit 1]], [[http://git.kernel.org/linus/1c865749999efdae63ddfb73b911ee04e1d4e1c8|2]], [[http://git.kernel.org/linus/dac6e2087a4143cfc3fc1017bf24b9d4be3055b7|3]], [[http://git.kernel.org/linus/5638b33abffd967dda4f984a247925b7af38b23d|4]], [[http://git.kernel.org/linus/8199b901a31b6e89b63842643f644fc05b403b20|5]], [[http://git.kernel.org/linus/00abf3041590da6ad7533bf592e8dd452820109f|6]], [[http://git.kernel.org/linus/a7306653705e456c8affeb4efe9542b9f6b757ad|7]], [[http://git.kernel.org/linus/8974b15c6e84e686201d382c7d459aa9c8c96572|8]], [[http://git.kernel.org/linus/76ac66e469f084d41742ba08923de76fbdc7dce3|9)]]

 * MD: TRIM support for linear [[http://git.kernel.org/linus/f1cad2b68ed12c0f82d3f56e150691f62b6f5edf|(commit)]], raid 0 [[http://git.kernel.org/linus/c83057a1f4f987327c49448b046d9625c612ed8e|(commit)]], raid 1 [[http://git.kernel.org/linus/2ff8cc2c6d4e323de71a42affeb3041fa17d5b10|(commit)]], raid 10 [[http://git.kernel.org/linus/532a2a3fba8df076d65fdf17518eeb327b37a313|(commit)]], raid5 [[http://git.kernel.org/linus/620125f2bf8ff0c4969b79653b54d7bcc9d40637|(commit)]]
 * DM RAID: Add rebuild capability for RAID10 [[http://git.kernel.org/linus/4ec1e369af83f7ecdfbd48a905e44fc9910115ba|(commit)]]


= Crypto =
 * aesni_intel: improve performance by utilizing parallel AES-NI hardware pipelines [[http://git.kernel.org/linus/023af608254add7ba037cd634cc5f2fb21ff6420|(commit)]]
 * Add IPsec ESN support to caam [[http://git.kernel.org/linus/891104ed008e8646c7860fe5bc70b0aac55dcc6c|(commit)]] and talitos [[http://git.kernel.org/linus/e763eb699be723fb41af818118068c6b3afdaf8d|(commit)]]
 * cast5 - add x86_64/avx assembler implementation [[http://git.kernel.org/linus/4d6d6a2c850f89bc9283d02519cb536baba72032|(commit)]]
 * RSA: Implement signature verification algorithm [PKCS#1 / RFC3447] [[http://git.kernel.org/linus/612e0fe99965a4028359cd1da5af56b7f6caf7f6|(commit)]]
 * X.509: Add a crypto key parser for binary (DER) X.509 certificates [[http://git.kernel.org/linus/c26fd69fa00916a31a47f5f096fd7be924106df8|(commit)]], add an ASN.1 decoder [[http://git.kernel.org/linus/42d5ec27f873c654a68f7f865dcd7737513e9508|(commit)]], add simple ASN.1 grammar compiler [[http://git.kernel.org/linus/4520c6a49af833c83de6c74525ce8e07bbe6d783|(commit)]]


= Security =
 * Smack: implement revoking all rules for a subject label [[http://git.kernel.org/linus/449543b0436a9146b855aad39eab76ae4853e88d|(commit)]]
 * Allow Yama to be unconditionally stacked [[http://git.kernel.org/linus/c6993e4ac002c92bc75379212e9179c36d4bf7ee|(commit)]]
 * Integrity Measurement Architecture
  * audit log hashes [[http://git.kernel.org/linus/e7c568e0fd0cf6d9c8ab8ea537ba8f3a3ae7c3d8|(commit)]]
  * digital signature verification support [[http://git.kernel.org/linus/8606404fa555c2ee691376fcc640ab89fe752035|(commit)]]
  * integrity appraisal extension [[http://git.kernel.org/linus/2fe5d6def1672ae6635dd71867bf36dcfaa7434b|(commit)]]

= Perf =
 * kvm: Events analysis tool [[http://git.kernel.org/linus/bcf6edcd6fdb8965290f0b635a530fa3c6c212e1|(commit)]]
 * perf probe: Add union member access support [[http://git.kernel.org/linus/7b0295b3db20a89b3296673871858b9ab6b68404|(commit)]]
 * perf tools: Long option completion support for each subcommands [[http://git.kernel.org/linus/4d8061faca7a50010f037374410f0c3647c3ecf8|(commit)]]

= Virtualization =
 * Add bio-based I/O path for virtio-blk. It reduces the I/O path in guest kernel to achieve high IOPS and lower latency. The downside is that guest can not use the I/O scheduler to merge and sort requests. However, this is not a big problem if the backend disk in host side uses faster disk device (it can be disabled with the use_bio module parameter) [[http://git.kernel.org/linus/a98755c559e0e944a44174883b74a97019e3a367|(commit)]]
 * Add the xen EFI video mode support [[http://git.kernel.org/linus/aa387d630cfed1a694a9c8c61fba3877ba8d4f07|(commit)]]
 * Support Xen in ARM [[http://git.kernel.org/linus/eff8d6447d5fac2995ffa5c1f0ea2da5bd7074c9|(commit)]]
 * Xen backend support for paged out grant targets [[http://git.kernel.org/linus/c571898ffc24a1768e1b2dabeac0fc7dd4c14601|(commit)]]

= Networking =
 * loopback: set default MTU to 64K [[http://git.kernel.org/linus/0cf833aefaa85bbfce3ff70485e5534e09254773|(commit)]]
 * Providing protocol type via system.sockprotoname xattr of /proc/PID/fd entries [[http://git.kernel.org/linus/600e177920df936d03b807780ca92c662af98990|(commit)]]
 * Use a per-task frag allocator [[http://git.kernel.org/linus/5640f7685831e088fe6c2e1f863a6805962f8e81|(commit)]]
 * Netfilter
  * Add protocol-independent NAT core [[http://git.kernel.org/linus/c7232c9979cba684c50b64c513c4a83c9aa70563|(commit)]]
  * Add IPv6 MASQUERADE target [[http://git.kernel.org/linus/b3f644fc8232ca761da0b5c5ccb6f30b423c4302|(commit)]]
  * Add IPv6 NETMAP target [[http://git.kernel.org/linus/ed72d9e294a66fce8f4b4a2f6c8c011b22f1a87c|(commit)]]
  * Add IPv6 REDIRECT target [[http://git.kernel.org/linus/115e23ac78f87b632b5406e9d504fd56d17ffef1|(commit)]]
  * Add IPv6 NAT support [[http://git.kernel.org/linus/58a317f1061c894d2344c0b6a18ab4a64b69b815|(commit)]]
  * Support IPv6 in FTP NAT helper [[http://git.kernel.org/linus/d33cbeeb1a46a7dc82fe9f53e40a742ce0c67c79|(commit)]]
  * Support IPv6 in IRC NAT helper [[http://git.kernel.org/linus/5901b6be885e2c9a30fd94803b846b3d33e351dd|(commit)]]
  * Support IPv6 in SIP NAT helper [[http://git.kernel.org/linus/9a664821068739dbc8eac13770e28167b46a0c0f|(commit)]]
  * Support IPv6 in amanda NAT helper [[http://git.kernel.org/linus/ee6eb96673704225164f0ba7462e1973ce10885c|(commit)]]
  * Add stateless IPv6-to-IPv6 Network Prefix Translation target [[http://git.kernel.org/linus/8a91bb0c304b0853f8c59b1b48c7822c52362cba|(commit)]]
  * Remove xt_NOTRACK [[http://git.kernel.org/linus/965505015beccc4ec900798070165875b8e8dccf|(commit)]]
 * Near Field Communication (NFC): Add an Link Layer Control (LLC) Core layer to HCI [[http://git.kernel.org/linus/67cccfe17d1b3da1ed6c79e643c9be95ebde9642|(commit)]], add an shdlc llc module to llc core [[http://git.kernel.org/linus/4a61cd6687fc6348d08724676d34e38160d6cf9b|(commit)]], LLCP raw socket support [[http://git.kernel.org/linus/4463523bef98ff827a89cf8219db7dfac4350241|(commit)]]
 * bonding: support for IPv6 transmit hashing (and TCP or UDP over IPv6), bringing IPv6 up to par with IPv4 support in the bonding driver [[http://git.kernel.org/linus/6b923cb7188d46905f43fa84210c4c3e5f9cd8fb|(commit)]]
 * team: add support for non-Ethernet devices [[http://git.kernel.org/linus/1d76efe1577b4323609b1bcbfafa8b731eda071a|(commit)]]
 * gre: Support GRE over IPv6 [[http://git.kernel.org/linus/c12b395a46646bab69089ce7016ac78177f6001f|(commit)]], add GSO support [[http://git.kernel.org/linus/6b78f16e4bdde3936b11690bdb970be423e07a07|(commit)]], add GRO capability [[http://git.kernel.org/linus/60769a5dcd8755715c7143b4571d5c44f01796f1|(commit)]]
 * packet: Diag core and basic socket info dumping [[http://git.kernel.org/linus/96ec6327144e1ac9e6676e34fae8b49c2102fa5a|(commit)]]
 * ethtool: support for setting MDI/MDI-X state for twisted pair wiring [[http://git.kernel.org/linus/6f6bbc186dc8e4e0c628db7decbd1a5e02cb5fd8|(commit)]]
 * ppp: add 64-bit stats [[http://git.kernel.org/linus/e51f6ff396eac38582eb583d16c5d9be05a848d2|(commit)]]
 * Add generic netlink support for tcp_metrics [[http://git.kernel.org/linus/d23ff701643a4a725e2c7a8ba2d567d39daa29ea|(commit)]]


= Other news sites that track the changes of this release =
 * LWN [[https://lwn.net/Articles/518275/|Merge window part 1]], [[https://lwn.net/Articles/518711/|merge window part 2]], [[https://lwn.net/Articles/519883/|merge window part 3]]
 * H-Online Kernel Log - Coming in 3.7 [[http://www.h-online.com/open/features/Kernel-Log-Coming-in-3-7-Part-1-Filesystems-storage-1750000.html|Part 1: Filesystems & storage]], [[http://www.h-online.com/open/features/Kernel-Log-Coming-in-3-7-Part-2-Networking-1752099.html|Part 2: Networking]], [[http://www.h-online.com/open/features/Kernel-Log-Coming-in-3-7-Part-3-Infrastructure-1755953.html|Part 3: Infrastructure]], [[http://www.h-online.com/open/features/Kernel-Log-Coming-in-3-7-Part-4-Drivers-1757358.html|Part 4: Drivers]], [[http://www.h-online.com/open/features/Kernel-Log-Coming-in-3-7-Part-5-CPU-and-platform-code-1758293.html|Part 5: CPU and platform code]]
 * Phoronix [[http://www.phoronix.com/scan.php?page=news_item&px=MTI0NzM|An Overview Of The Linux 3.7 Kernel]]

----
 CategoryReleases
